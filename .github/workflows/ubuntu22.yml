name: Ubuntu 22.04

on:
  push:
    tags:
      - "*"

jobs:
  build-ubuntu22:
    name: Ubuntu 22.04
    runs-on: ubuntu-22.04
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}<insert_your_clean_build_command>
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          sudo fallocate -l 6G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo apt-get update
          sudo apt-get install -y libboost-all-dev
          build_folder="build/debug"
          ccx_version=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          ccx_ver_folder=$(echo $ccx_version | sed 's/\.//g')
          release_name=ccx-cli-ubuntu-2204-v"$ccx_version"
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake ../..
          make -j2
          mkdir -p "$release_name/$ccx_ver_folder"
          exeFiles=()
          for f in src/*; do [[ -x $f && -f $f ]] && exeFiles+=( "$f" ); done
          cp "${exeFiles[@]}" "$release_name/$ccx_ver_folder"
          cd "$release_name"
          tar -czf "$release_name".tar.gz "$ccx_ver_folder"
          sha256=$(shasum -a 256 "$release_name".tar.gz | awk '{print toupper($1)}')
          asset_path="./$build_folder/$release_name/$release_name.tar.gz"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.tar.gz"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=ccx_version::${ccx_version}"

      # since https://github.com/softprops/action-gh-release/pull/145 body is replaced instead of being appended
      # use v0.1.12 for now
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.12
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Conceal Core CLI v${{ steps.build.outputs.ccx_version }}
          body: |
            [Download for Ubuntu 22.04](../../releases/download/${{ steps.build.outputs.ccx_version }}/${{ steps.build.outputs.release_name }}) **${{ steps.build.outputs.release_name }}**
            `SHA256 : ${{ steps.build.outputs.sha256 }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
